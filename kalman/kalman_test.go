package kalman

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestKalman(t *testing.T) {
	k := newBaseKalmanFilter()
	require.NotNil(t, k)

	stds := k.GetInitialCovariancesStd([][4]float64{
		{10, 45, 7.8, 90},
		{0.7, 9.004, 78.98, -1.7},
	})
	require.InDeltaSlice(t, []float64{0.78, 9., 0.78, 9., 0.4875, 5.625, 0.4875, 5.625}, stds[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{7.898, -0.17, 7.898, -0.17, 4.93625, -0.10625, 4.93625, -0.10625}, stds[1][:], 1e-8)

	mNoises := k.GetMeasurementNoisesStd([][4]float64{{10, 45, 7.8, 90}, {0.7, 9.004, 78.98, -1.7}})
	require.InDeltaSlice(t, []float64{0.39, 4.5, 0.39, 4.5}, mNoises[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{3.949, -0.085, 3.949, -0.085}, mNoises[1][:], 1e-8)

	mpnPos, mpnVel := k.GetMultiProcessNoiseStd([][4]float64{{10, 45, 7.8, 90}, {0.7, 9.004, 78.98, -1.7}})
	require.InDeltaSlice(t, []float64{0.39, 4.5, 0.39, 4.5}, mpnPos[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{3.949, -0.085, 3.949, -0.085}, mpnPos[1][:], 1e-8)
	require.InDeltaSlice(t, []float64{0.04875, 0.5625, 0.04875, 0.5625}, mpnVel[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{0.493625, -0.010625, 0.493625, -0.010625}, mpnVel[1][:], 1e-8)

	mean := make([][8]float64, 2)
	cov := make([][64]float64, 2)
	k.MultiInitiate([][4]float64{{10, 45, 7.8, 90}, {0.7, 9.004, 78.98, -1.7}}, mean, cov)
	require.InDeltaSlice(t, []float64{10.0, 45.0, 7.8, 90.0, 0.0, 0.0, 0.0, 0.0}, mean[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{0.7, 9.004, 78.98, -1.7, 0.0, 0.0, 0.0, 0.0}, mean[1][:], 1e-8)
	require.InDeltaSlice(t, []float64{0.6084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 81.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 81.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23765624999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 31.640625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23765624999999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 31.640625}, cov[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{62.37840400000001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.028900000000000006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 62.37840400000001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.028900000000000006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.366564062500004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011289062499999999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.366564062500004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011289062499999999}, cov[1][:], 1e-8)

	k.MultiPredict(mean, cov)
	require.InDeltaSlice(t, []float64{10.0, 45.0, 7.8, 90.0, 0.0, 0.0, 0.0, 0.0}, mean[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{0.7, 9.004, 78.98, -1.7, 0.0, 0.0, 0.0, 0.0}, mean[1][:], 1e-8)
	require.InDeltaSlice(t, []float64{0.9981562500000001, 0.0, 0.0, 0.0, 0.23765624999999999, 0.0, 0.0, 0.0, 0.0, 132.890625, 0.0, 0.0, 0.0, 31.640625, 0.0, 0.0, 0.0, 0.0, 0.9981562500000001, 0.0, 0.0, 0.0, 0.23765624999999999, 0.0, 0.0, 0.0, 0.0, 132.890625, 0.0, 0.0, 0.0, 31.640625, 0.23765624999999999, 0.0, 0.0, 0.0, 0.2400328125, 0.0, 0.0, 0.0, 0.0, 31.640625, 0.0, 0.0, 0.0, 31.95703125, 0.0, 0.0, 0.0, 0.0, 0.23765624999999999, 0.0, 0.0, 0.0, 0.2400328125, 0.0, 0.0, 0.0, 0.0, 31.640625, 0.0, 0.0, 0.0, 31.95703125}, cov[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{102.33956906250002, 0.0, 0.0, 0.0, 24.366564062500004, 0.0, 0.0, 0.0, 0.0, 0.04741406250000001, 0.0, 0.0, 0.0, 0.011289062499999999, 0.0, 0.0, 0.0, 0.0, 102.33956906250002, 0.0, 0.0, 0.0, 24.366564062500004, 0.0, 0.0, 0.0, 0.0, 0.04741406250000001, 0.0, 0.0, 0.0, 0.011289062499999999, 24.366564062500004, 0.0, 0.0, 0.0, 24.610229703125004, 0.0, 0.0, 0.0, 0.0, 0.011289062499999999, 0.0, 0.0, 0.0, 0.011401953125, 0.0, 0.0, 0.0, 0.0, 24.366564062500004, 0.0, 0.0, 0.0, 24.610229703125004, 0.0, 0.0, 0.0, 0.0, 0.011289062499999999, 0.0, 0.0, 0.0, 0.011401953125}, cov[1][:], 1e-8)

	pMean, pCov := k.MultiProject(mean, cov)
	require.InDeltaSlice(t, []float64{10.0, 45.0, 7.8, 90.0}, pMean[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{0.7, 9.004, 78.98, -1.7}, pMean[1][:], 1e-8)
	require.InDeltaSlice(t, []float64{1.15025625, 0.0, 0.0, 0.0, 0.0, 153.140625, 0.0, 0.0, 0.0, 0.0, 1.15025625, 0.0, 0.0, 0.0, 0.0, 153.140625}, pCov[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{117.93417006250002, 0.0, 0.0, 0.0, 0.0, 0.05463906250000001, 0.0, 0.0, 0.0, 0.0, 117.93417006250002, 0.0, 0.0, 0.0, 0.0, 0.05463906250000001}, pCov[1][:], 1e-8)

	k.MultiUpdate(mean, cov, [][4]float64{{70, 43, .8, 67}, {1.7, 5.004, 78, -1.5}})
	require.InDeltaSlice(t, []float64{62.06611570247934, 43.264462809917354, 1.725619834710744, 70.04132231404958, 12.39669421487603, -0.41322314049586784, -1.4462809917355368, -4.75206611570248}, mean[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{1.5677685950413225, 5.53292561983471, 78.12958677685951, -1.5264462809917356, 0.2066115702479339, -0.8264462809917351, -0.20247933884297603, 0.04132231404958674}, mean[1][:], 1e-8)
	require.InDeltaSlice(t, []float64{0.13198760330578518, 0.0, 0.0, 0.0, 0.03142561983471079, 0.0, 0.0, 0.0, 0.0, 17.572314049586723, 0.0, 0.0, 0.0, 4.1838842975206525, 0.0, 0.0, 0.0, 0.0, 0.13198760330578518, 0.0, 0.0, 0.0, 0.03142561983471079, 0.0, 0.0, 0.0, 0.0, 17.572314049586723, 0.0, 0.0, 0.0, 4.1838842975206525, 0.03142561983471079, 0.0, 0.0, 0.0, 0.1909302815082645, 0.0, 0.0, 0.0, 0.0, 4.1838842975206525, 0.0, 0.0, 0.0, 25.419712035123965, 0.0, 0.0, 0.0, 0.0, 0.03142561983471079, 0.0, 0.0, 0.0, 0.1909302815082645, 0.0, 0.0, 0.0, 0.0, 4.1838842975206525, 0.0, 0.0, 0.0, 25.419712035123965}, cov[0][:], 1e-8)
	require.InDeltaSlice(t, []float64{13.532504999999972, 0.0, 0.0, 0.0, 3.2220249999999986, 0.0, 0.0, 0.0, 0.0, 0.0062696280991735645, 0.0, 0.0, 0.0, 0.0014927685950413272, 0.0, 0.0, 0.0, 0.0, 13.532504999999972, 0.0, 0.0, 0.0, 3.2220249999999986, 0.0, 0.0, 0.0, 0.0, 0.0062696280991735645, 0.0, 0.0, 0.0, 0.0014927685950413272, 3.222024999999995, 0.0, 0.0, 0.0, 19.575815640625002, 0.0, 0.0, 0.0, 0.0, 0.0014927685950413255, 0.0, 0.0, 0.0, 0.009069502195247936, 0.0, 0.0, 0.0, 0.0, 3.222024999999995, 0.0, 0.0, 0.0, 19.575815640625002, 0.0, 0.0, 0.0, 0.0, 0.0014927685950413255, 0.0, 0.0, 0.0, 0.009069502195247936}, cov[1][:], 1e-8)
}
